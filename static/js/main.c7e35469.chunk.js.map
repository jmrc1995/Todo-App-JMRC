{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","components/Header.js","App.js","index.js"],"names":["TodoForm","props","className","onSubmit","addItem","onChange","currentInput","type","value","currentText","currentItem","task","placeholder","TodoList","listItems","items","map","item","cols","id","key","e","setUpdate","target","onClick","deleteItems","Header","state","date","Date","toLocaleString","this","React","Component","App","handleChange","bind","addTodo","deleteItem","setUpdates","setState","now","preventDefault","curTask","newArray","filteredItems","filter","console","log","text","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAgCeA,MA1Bf,SAAkBC,GAId,OACA,qBAEIC,UAAW,sBAFf,SAIQ,uBAAMC,SAAUF,EAAMG,QAAtB,UACI,uBACIC,SAAWJ,EAAMK,aACjBC,KAAK,OACLC,MAAOP,EAAMQ,YAAYC,YAAYC,KACrCC,YAAa,eACbV,UAAU,qBAGV,wBAAQK,KAAK,SAAb,0B,gBCuBLM,MAvCf,SAAkBZ,GAEd,IACMa,EADOb,EAAMc,MACIC,KAAI,SAAAC,GAEnB,OAEI,sBAAKf,UAAU,OAAf,UAEQ,4BACI,0BACIgB,KAAK,KACLX,KAAK,OACLY,GAAIF,EAAKG,IACTZ,MAAOS,EAAKN,KACZN,SAAU,SAACgB,GAAKpB,EAAMqB,UAAUD,EAAEE,OAAOf,MAAOS,EAAKG,UAGjE,cAAE,IAAF,CACIlB,UAAU,WACVsB,QAAS,kBAAIvB,EAAMwB,YAAYR,EAAKG,UAbjBH,EAAKG,QAsB5C,OAEI,qBAAKlB,UAAU,qBAAf,SAEOY,KCtCMY,G,wDAEjB,WAAYzB,GAAO,IAAD,8BACd,cAAMA,IAED0B,MAAM,CACPC,MAAO,IAAIC,MAAOC,kBAJR,E,0CAYtB,WAEI,OAEQ,qBAAK5B,UAAU,uBAAf,SACQ,+BACI,2CAEA,gCACK6B,KAAKJ,MAAMC,gB,GAvBJI,IAAMC,YCMrBC,E,kDACjB,aAAc,IAAD,8BACb,gBAEOP,MAAM,CACTZ,MAAM,GACRL,YAAa,CACXC,KAAM,GACNS,IAAK,KAKP,EAAKe,aAAa,EAAKA,aAAaC,KAAlB,gBAClB,EAAKC,QAAQ,EAAKA,QAAQD,KAAb,gBACb,EAAKE,WAAY,EAAKA,WAAWF,KAAhB,gBACjB,EAAKG,WAAW,EAAKA,WAAWH,KAAhB,gBAfL,E,gDAqBf,SAAaf,GACXU,KAAKS,SAAS,CACZ9B,YAAa,CACXC,KAAOU,EAAEE,OAAOf,MAChBY,IAAKS,KAAKY,W,qBAKhB,SAAQpB,GACNA,EAAEqB,iBACF,IAAMC,EAAUZ,KAAKJ,MAAMjB,YAC3B,GAAoB,KAAjBiC,EAAQhC,KAAY,CACnB,IAAMiC,EAAQ,sBAAOb,KAAKJ,MAAMZ,OAAlB,CAAyB4B,IACvCZ,KAAKS,SAAS,CACZzB,MAAO6B,EACPlC,YAAY,CACVC,KAAK,GACLS,IAAI,S,wBAMd,SAAWA,GACT,IAAMyB,EAAgBd,KAAKJ,MAAMZ,MAAM+B,QAAO,SAAA7B,GAAI,OAChDA,EAAKG,MAAMA,KACXW,KAAKS,SAAS,CACZzB,MAAO8B,M,wBAKb,SAAWxB,GACT0B,QAAQC,IAAI,yB,wBAGd,SAAYC,EAAM7B,GAChB,IAAML,EAAQgB,KAAKJ,MAAMZ,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKG,MAAMA,IACZH,EAAKN,KAAKsC,MAGdlB,KAAKS,SAAS,CACZzB,MAAOA,M,oBAQX,WAEE,OAEE,sBAAKb,UAAU,MAAf,UAEI,yBAAQA,UAAU,aAAlB,UAEE,uCAEA,gDAQJ,qBAAKA,UAAU,kBAAf,SAEQ,sBAAKA,UAAU,wBAAf,UAEA,cAAC,EAAD,IAEA,cAAC,EAAD,CAAUE,QAAW2B,KAAKM,QAAS/B,aAAcyB,KAAKI,aAAc1B,YAAasB,KAAKJ,QAGtF,cAAC,EAAD,CAAUZ,MAAOgB,KAAKJ,MAAMZ,MAAOU,YAAcM,KAAKO,WAAYhB,UAAWS,KAAKQ,yB,GAtGjEP,IAAMC,WCHvCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c7e35469.chunk.js","sourcesContent":["import React from 'react'\n\nimport './TodoForm.css'\n\n\n\nfunction TodoForm(props){\n\n\n\n    return (\n    <div \n\n        className ='form-main-container'>\n\n            <form onSubmit={props.addItem}>\n                <input \n                    onChange ={props.currentInput}\n                    type='text' \n                    value={props.currentText.currentItem.task}\n                    placeholder ='Enter a Task'\n                    className='form-input-field' />\n                    \n        \n                    <button type='submit'>\n                            Submit\n                    </button>\n            </form>\n    </div>\n    )\n}\n\nexport default TodoForm","import React from 'react'\nimport './TodoList.css'\nimport { BsTrashFill } from \"react-icons/bs\"\n\n\n\n\n\nfunction TodoList(props) {\n\n    const list = props.items;\n    const listItems = list.map(item =>\n        {\n            return (\n          \n                <div className='list' key={item.key}>\n\n                        <p>\n                            <textarea\n                                cols='40'  \n                                type='text' \n                                id={item.key}\n                                value={item.task}\n                                onChange={(e)=>{props.setUpdate(e.target.value, item.key)}}/>\n                        </p>\n                    \n                    < BsTrashFill \n                        className='bs-trash'\n                        onClick={()=>props.deleteItems(item.key)}/>\n                    \n\n                   \n       \n                </div>\n            )\n        })\n\n    return (\n        \n        <div className='list-box-container'>\n\n              {listItems} \n \n        </div>\n    )\n}\n\nexport default TodoList\n","import React, { Component } from 'react'\nimport './Header.css'\n\nexport default class Header extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.state={\n            date : new Date().toLocaleString()\n\n        };\n\n\n    }\n\n \nrender() {\n\n    return (\n    \n            <div className='view_header__content'>\n                    <h1>\n                        <span> Today </span>\n\n                        <small>\n                            {this.state.date}\n                        </small>\n\n                    </h1>\n\n                \n            </div>\n        )\n    }\n}\n\n","import React from 'react'\nimport './App.css';\nimport TodoForm from './components/TodoForm'\nimport TodoList from './components/TodoList'\nimport Header from './components/Header'\n\n\n\n\nexport default class App extends React.Component {\n    constructor(){\n    super();\n\n      this.state={\n        items:[],\n      currentItem :{\n        task :'',\n        key: ''\n      }\n        \n      };\n\n      this.handleChange=this.handleChange.bind(this)\n      this.addTodo=this.addTodo.bind(this)\n      this.deleteItem= this.deleteItem.bind(this)\n      this.setUpdates=this.setUpdates.bind(this)\n\n\n  }\n\n\n  handleChange(e){\n    this.setState({\n      currentItem: { \n        task : e.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n  addTodo(e){\n    e.preventDefault(); // prevents refresh \n    const curTask = this.state.currentItem; // store current task text in memory(var)\n    if(curTask.task !== ''){\n        const newArray = [...this.state.items, curTask]\n        this.setState({\n          items: newArray,\n          currentItem:{\n            task:'',\n            key:''\n          } \n       })\n    }\n  }\n\n  deleteItem(key){\n    const filteredItems = this.state.items.filter(item => \n      item.key!==key);\n      this.setState({\n        items: filteredItems\n      })\n    \n  }\n\n  editChange(e) {\n    console.log(\"edit mode activated\")\n  }\n\n  setUpdates (text, key){\n    const items = this.state.items;\n    items.map(item=>{\n      if(item.key===key){\n        item.task=text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n\n  \n\n\n\n  render(){\n\n    return (\n      \n      <div className=\"App\">\n        \n          <header className=\"App-header\">\n            \n            <h1>TO:DO</h1>\n\n            <small>\n              by jmrc.\n              </small>\n            \n            \n             \n        </header>\n          \n        <div className='page-background'>\n\n                <div className='main-parent-container'>\n\n                <Header />\n\n                <TodoForm addItem = {this.addTodo} currentInput={this.handleChange} currentText={this.state}/>\n              \n                \n                <TodoList items={this.state.items} deleteItems ={this.deleteItem} setUpdate={this.setUpdates}/>\n\n                </div>\n\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}